{"ast":null,"code":"function truncateDecimalsOfNumber(originalNumber, numberOfDecimals = 2) {\n  // toFixed() converts a number into a string by truncating it\n  // with the number of decimals passed as parameter.\n  const amountTruncated = originalNumber.toFixed(numberOfDecimals); // We use parseFloat() to return a transform the string into a number\n\n  return parseFloat(amountTruncated);\n}\n\nfunction calculateVoucherDiscountAmount({\n  voucher,\n  amount\n}) {\n  // We assume that the voucher has the right format.\n  // It either has `discountPercent` or `discountAmount`\n  console.log(voucher.components[1]);\n  const isDiscountAmount = Boolean(voucher.discountAmount);\n\n  if (isDiscountAmount) {\n    return voucher.discountAmount;\n  }\n\n  const amountToDiscount = amount * voucher.discountPercent / 100;\n  return truncateDecimalsOfNumber(amountToDiscount);\n}\n\nmodule.exports = {\n  calculateVoucherDiscountAmount\n};","map":{"version":3,"sources":["/Users/acandael/Sites/crystallize-app/src/services/basket-service/calculate-voucher-discount-amount.js"],"names":["truncateDecimalsOfNumber","originalNumber","numberOfDecimals","amountTruncated","toFixed","parseFloat","calculateVoucherDiscountAmount","voucher","amount","console","log","components","isDiscountAmount","Boolean","discountAmount","amountToDiscount","discountPercent","module","exports"],"mappings":"AACA,SAASA,wBAAT,CAAkCC,cAAlC,EAAkDC,gBAAgB,GAAG,CAArE,EAAwE;AACtE;AACA;AACA,QAAMC,eAAe,GAAGF,cAAc,CAACG,OAAf,CAAuBF,gBAAvB,CAAxB,CAHsE,CAItE;;AACA,SAAOG,UAAU,CAACF,eAAD,CAAjB;AACD;;AAED,SAASG,8BAAT,CAAwC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAxC,EAA6D;AAC3D;AACA;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAO,CAACI,UAAR,CAAmB,CAAnB,CAAZ;AACA,QAAMC,gBAAgB,GAAGC,OAAO,CAACN,OAAO,CAACO,cAAT,CAAhC;;AAEA,MAAIF,gBAAJ,EAAsB;AACpB,WAAOL,OAAO,CAACO,cAAf;AACD;;AAED,QAAMC,gBAAgB,GAAIP,MAAM,GAAGD,OAAO,CAACS,eAAlB,GAAqC,GAA9D;AAEA,SAAOhB,wBAAwB,CAACe,gBAAD,CAA/B;AACD;;AAEDE,MAAM,CAACC,OAAP,GAAiB;AACfZ,EAAAA;AADe,CAAjB","sourcesContent":["\nfunction truncateDecimalsOfNumber(originalNumber, numberOfDecimals = 2) {\n  // toFixed() converts a number into a string by truncating it\n  // with the number of decimals passed as parameter.\n  const amountTruncated = originalNumber.toFixed(numberOfDecimals);\n  // We use parseFloat() to return a transform the string into a number\n  return parseFloat(amountTruncated);\n}\n\nfunction calculateVoucherDiscountAmount({ voucher, amount }) {\n  // We assume that the voucher has the right format.\n  // It either has `discountPercent` or `discountAmount`\n  console.log(voucher.components[1])\n  const isDiscountAmount = Boolean(voucher.discountAmount);\n\n  if (isDiscountAmount) {\n    return voucher.discountAmount;\n  }\n\n  const amountToDiscount = (amount * voucher.discountPercent) / 100;\n\n  return truncateDecimalsOfNumber(amountToDiscount);\n}\n\nmodule.exports = {\n  calculateVoucherDiscountAmount,\n};"]},"metadata":{},"sourceType":"script"}