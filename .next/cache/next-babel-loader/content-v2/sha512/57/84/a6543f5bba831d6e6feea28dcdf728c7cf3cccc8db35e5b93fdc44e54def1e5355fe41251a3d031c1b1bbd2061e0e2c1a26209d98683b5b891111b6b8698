{"ast":null,"code":"const gql = require(\"graphql-tag\");\n\nmodule.exports = gql`\n  scalar JSON\n\n  type Query {\n    myCustomBusinessThing: MyCustomBusinnessQueries!\n    basket(basketModel: BasketModelInput!): Basket!\n    user: UserQueries!\n    paymentProviders: PaymentProvidersQueries!\n    orders: OrderQueries!\n  }\n\n  type MyCustomBusinnessQueries {\n    whatIsThis: String!\n    dynamicRandomInt: Int!\n    youCanEvenGetTheUserDataHere: UserQueries!\n  }\n\n  type Basket {\n    cart: [CartItem!]!\n    total: Price!\n    voucher: Voucher\n  }\n\n  type CartItem {\n    id: String!\n    name: String\n    path: String!\n    quantity: Int!\n    sku: String!\n    vatType: VatType\n    stock: Int\n    price: Price\n    priceVariants: [PriceVariant!]!\n    attributes: [Attribute!]\n    images: [Image!]!\n  }\n\n  type PriceVariant {\n    price: Float\n    identifier: String!\n    currency: String!\n  }\n\n  type Attribute {\n    attribute: String!\n    value: String\n  }\n\n  type Image {\n    url: String!\n    variants: [ImageVariant!]\n  }\n\n  type ImageVariant {\n    url: String!\n    width: Int\n    height: Int\n  }\n\n  type Price {\n    gross: Float!\n    net: Float!\n    currency: String\n    tax: Tax\n    taxAmount: Float\n  }\n\n  type Tax {\n    name: String\n    percent: Float\n  }\n\n  type VatType {\n    name: String!\n    percent: Int!\n  }\n\n  type UserQueries {\n    logoutLink: String!\n    isLoggedIn: Boolean!\n    email: String\n  }\n\n  type PaymentProvidersQueries {\n    stripe: PaymentProvider!\n    klarna: PaymentProvider!\n    vipps: PaymentProvider!\n    mollie: PaymentProvider!\n  }\n\n  type PaymentProvider {\n    enabled: Boolean!\n    config: JSON\n  }\n\n  type OrderQueries {\n    get(id: String!): JSON\n  }\n\n  type Voucher {\n    code: String!\n    discountAmount: Int\n    discountPercent: Float\n  }\n\n  type Mutation {\n    user: UserMutations\n    paymentProviders: PaymentProvidersMutations!\n  }\n\n  type MutationResponse {\n    success: Boolean!\n    error: String\n  }\n\n  input BasketModelInput {\n    locale: LocaleInput!\n    cart: [SimpleCartItem!]!\n    voucherCode: String\n    crystallizeOrderId: String\n    klarnaOrderId: String\n  }\n\n  input LocaleInput {\n    locale: String!\n    displayName: String\n    appLanguage: String!\n    crystallizeCatalogueLanguage: String\n    crystallizePriceVariant: String\n  }\n\n  input SimpleCartItem {\n    sku: String!\n    path: String!\n    quantity: Int\n    priceVariantIdentifier: String!\n  }\n\n  type UserMutations {\n    sendMagicLink(\n      email: String!\n      redirectURLAfterLogin: String!\n    ): MutationResponse!,\n    sendGiftCard(\n      email: String!\n      aanbieder: String!\n      message: String!\n      amount: String!\n    ): MutationResponse!\n  }\n\n  input CheckoutModelInput {\n    basketModel: BasketModelInput!\n    metadata: JSON\n    customer: CustomerInput\n    confirmationURL: String!\n    checkoutURL: String!\n    termsURL: String!\n  }\n\n  input CustomerInput {\n    firstName: String\n    lastName: String\n    addresses: [AddressInput!]\n  }\n\n  input AddressInput {\n    type: String\n    email: String\n    street: String,\n    streetNr: String,\n    postalCode: String\n    city: String\n  }\n\n  type PaymentProvidersMutations {\n    stripe: StripeMutations!\n    klarna: KlarnaMutations!\n    mollie: MollieMutations!\n    vipps: VippsMutations!\n  }\n\n  type StripeMutations {\n    createPaymentIntent(checkoutModel: CheckoutModelInput!): JSON\n    confirmOrder(\n      checkoutModel: CheckoutModelInput!\n      paymentIntentId: String!\n    ): StripeConfirmOrderResponse!\n  }\n\n  type StripeConfirmOrderResponse {\n    success: Boolean!\n    orderId: String\n  }\n\n  type KlarnaMutations {\n    renderCheckout(\n      checkoutModel: CheckoutModelInput!\n    ): KlarnaRenderCheckoutReponse!\n  }\n\n  type KlarnaRenderCheckoutReponse {\n    html: String!\n    klarnaOrderId: String!\n    crystallizeOrderId: String!\n  }\n\n  type MollieMutations {\n    createPayment(\n      checkoutModel: CheckoutModelInput!\n    ): MollieCreatePaymentResponse!\n  }\n\n  type MollieCreatePaymentResponse {\n    success: Boolean!\n    checkoutLink: String\n    crystallizeOrderId: String!\n  }\n\n  type VippsMutations {\n    initiatePayment(\n      checkoutModel: CheckoutModelInput!\n    ): VippsInitiatePaymentResponse!\n  }\n\n  type VippsInitiatePaymentResponse {\n    success: Boolean!\n    checkoutLink: String\n    crystallizeOrderId: String!\n  }\n`;","map":{"version":3,"sources":["/Users/acandael/Sites/crystallize-app/src/graphql-server/type-defs.js"],"names":["gql","require","module","exports"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,aAAD,CAAnB;;AAEAC,MAAM,CAACC,OAAP,GAAiBH,GAAI;AACrtOA","sourcesContent":["const gql = require(\"graphql-tag\");\n\nmodule.exports = gql`\n  scalar JSON\n\n  type Query {\n    myCustomBusinessThing: MyCustomBusinnessQueries!\n    basket(basketModel: BasketModelInput!): Basket!\n    user: UserQueries!\n    paymentProviders: PaymentProvidersQueries!\n    orders: OrderQueries!\n  }\n\n  type MyCustomBusinnessQueries {\n    whatIsThis: String!\n    dynamicRandomInt: Int!\n    youCanEvenGetTheUserDataHere: UserQueries!\n  }\n\n  type Basket {\n    cart: [CartItem!]!\n    total: Price!\n    voucher: Voucher\n  }\n\n  type CartItem {\n    id: String!\n    name: String\n    path: String!\n    quantity: Int!\n    sku: String!\n    vatType: VatType\n    stock: Int\n    price: Price\n    priceVariants: [PriceVariant!]!\n    attributes: [Attribute!]\n    images: [Image!]!\n  }\n\n  type PriceVariant {\n    price: Float\n    identifier: String!\n    currency: String!\n  }\n\n  type Attribute {\n    attribute: String!\n    value: String\n  }\n\n  type Image {\n    url: String!\n    variants: [ImageVariant!]\n  }\n\n  type ImageVariant {\n    url: String!\n    width: Int\n    height: Int\n  }\n\n  type Price {\n    gross: Float!\n    net: Float!\n    currency: String\n    tax: Tax\n    taxAmount: Float\n  }\n\n  type Tax {\n    name: String\n    percent: Float\n  }\n\n  type VatType {\n    name: String!\n    percent: Int!\n  }\n\n  type UserQueries {\n    logoutLink: String!\n    isLoggedIn: Boolean!\n    email: String\n  }\n\n  type PaymentProvidersQueries {\n    stripe: PaymentProvider!\n    klarna: PaymentProvider!\n    vipps: PaymentProvider!\n    mollie: PaymentProvider!\n  }\n\n  type PaymentProvider {\n    enabled: Boolean!\n    config: JSON\n  }\n\n  type OrderQueries {\n    get(id: String!): JSON\n  }\n\n  type Voucher {\n    code: String!\n    discountAmount: Int\n    discountPercent: Float\n  }\n\n  type Mutation {\n    user: UserMutations\n    paymentProviders: PaymentProvidersMutations!\n  }\n\n  type MutationResponse {\n    success: Boolean!\n    error: String\n  }\n\n  input BasketModelInput {\n    locale: LocaleInput!\n    cart: [SimpleCartItem!]!\n    voucherCode: String\n    crystallizeOrderId: String\n    klarnaOrderId: String\n  }\n\n  input LocaleInput {\n    locale: String!\n    displayName: String\n    appLanguage: String!\n    crystallizeCatalogueLanguage: String\n    crystallizePriceVariant: String\n  }\n\n  input SimpleCartItem {\n    sku: String!\n    path: String!\n    quantity: Int\n    priceVariantIdentifier: String!\n  }\n\n  type UserMutations {\n    sendMagicLink(\n      email: String!\n      redirectURLAfterLogin: String!\n    ): MutationResponse!,\n    sendGiftCard(\n      email: String!\n      aanbieder: String!\n      message: String!\n      amount: String!\n    ): MutationResponse!\n  }\n\n  input CheckoutModelInput {\n    basketModel: BasketModelInput!\n    metadata: JSON\n    customer: CustomerInput\n    confirmationURL: String!\n    checkoutURL: String!\n    termsURL: String!\n  }\n\n  input CustomerInput {\n    firstName: String\n    lastName: String\n    addresses: [AddressInput!]\n  }\n\n  input AddressInput {\n    type: String\n    email: String\n    street: String,\n    streetNr: String,\n    postalCode: String\n    city: String\n  }\n\n  type PaymentProvidersMutations {\n    stripe: StripeMutations!\n    klarna: KlarnaMutations!\n    mollie: MollieMutations!\n    vipps: VippsMutations!\n  }\n\n  type StripeMutations {\n    createPaymentIntent(checkoutModel: CheckoutModelInput!): JSON\n    confirmOrder(\n      checkoutModel: CheckoutModelInput!\n      paymentIntentId: String!\n    ): StripeConfirmOrderResponse!\n  }\n\n  type StripeConfirmOrderResponse {\n    success: Boolean!\n    orderId: String\n  }\n\n  type KlarnaMutations {\n    renderCheckout(\n      checkoutModel: CheckoutModelInput!\n    ): KlarnaRenderCheckoutReponse!\n  }\n\n  type KlarnaRenderCheckoutReponse {\n    html: String!\n    klarnaOrderId: String!\n    crystallizeOrderId: String!\n  }\n\n  type MollieMutations {\n    createPayment(\n      checkoutModel: CheckoutModelInput!\n    ): MollieCreatePaymentResponse!\n  }\n\n  type MollieCreatePaymentResponse {\n    success: Boolean!\n    checkoutLink: String\n    crystallizeOrderId: String!\n  }\n\n  type VippsMutations {\n    initiatePayment(\n      checkoutModel: CheckoutModelInput!\n    ): VippsInitiatePaymentResponse!\n  }\n\n  type VippsInitiatePaymentResponse {\n    success: Boolean!\n    checkoutLink: String\n    crystallizeOrderId: String!\n  }\n`;\n"]},"metadata":{},"sourceType":"script"}