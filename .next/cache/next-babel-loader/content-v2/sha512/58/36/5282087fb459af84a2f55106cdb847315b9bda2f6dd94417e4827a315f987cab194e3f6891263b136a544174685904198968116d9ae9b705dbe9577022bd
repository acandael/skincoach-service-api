{"ast":null,"code":"const {\n  getClient\n} = require(\"./utils\");\n\nmodule.exports = async function stripeToCrystallizeOrderModel({\n  basket,\n  checkoutModel,\n  paymentIntentId\n}) {\n  var _checkoutModel$custom, _checkoutModel$custom2, _checkoutModel$custom3, _checkoutModel$custom4, _checkoutModel$custom5, _checkoutModel$custom6;\n\n  const paymentIntent = await getClient().paymentIntents.retrieve(paymentIntentId);\n  const {\n    data\n  } = paymentIntent.charges;\n  const charge = data[0];\n  const customerName = charge.billing_details.name.split(\" \");\n  return {\n    cart: basket.cart,\n    total: basket.total,\n    additionalInformation: JSON.stringify({\n      stripe_merchant_data: paymentIntent.merchant_data,\n      order_metadata: checkoutModel.metadata\n    }),\n    customer: {\n      identifier: \"\",\n      firstName: customerName[0],\n      middleName: customerName.slice(1, customerName.length - 1).join(),\n      lastName: customerName[customerName.length - 1],\n      birthDate: Date,\n      addresses: [{\n        type: \"billing\",\n        firstName: customerName[0],\n        middleName: customerName.slice(1, customerName.length - 1).join(),\n        lastName: customerName[customerName.length - 1],\n        street: charge.billing_details.address.line1,\n        street2: charge.billing_details.address.line2,\n        postalCode: charge.billing_details.address.postal_code,\n        city: charge.billing_details.address.city,\n        state: charge.billing_details.address.state,\n        country: charge.billing_details.address.country,\n        phone: charge.billing_details.phone,\n        email: charge.receipt_email || ((_checkoutModel$custom = checkoutModel.customer) === null || _checkoutModel$custom === void 0 ? void 0 : (_checkoutModel$custom2 = _checkoutModel$custom.addresses) === null || _checkoutModel$custom2 === void 0 ? void 0 : (_checkoutModel$custom3 = _checkoutModel$custom2[0]) === null || _checkoutModel$custom3 === void 0 ? void 0 : _checkoutModel$custom3.email) || undefined\n      }, {\n        type: \"delivery\",\n        firstName: customerName[0],\n        middleName: customerName.slice(1, customerName.length - 1).join(),\n        lastName: customerName[customerName.length - 1],\n        street: charge.billing_details.address.line1,\n        street2: charge.billing_details.address.line2,\n        postalCode: charge.billing_details.address.postal_code,\n        city: charge.billing_details.address.city,\n        state: charge.billing_details.address.state,\n        country: charge.billing_details.address.country,\n        phone: charge.billing_details.phone,\n        email: charge.receipt_email || ((_checkoutModel$custom4 = checkoutModel.customer) === null || _checkoutModel$custom4 === void 0 ? void 0 : (_checkoutModel$custom5 = _checkoutModel$custom4.addresses) === null || _checkoutModel$custom5 === void 0 ? void 0 : (_checkoutModel$custom6 = _checkoutModel$custom5[0]) === null || _checkoutModel$custom6 === void 0 ? void 0 : _checkoutModel$custom6.email) || undefined\n      }]\n    },\n    payment: [{\n      provider: \"stripe\",\n      stripe: {\n        stripe: charge.id,\n        customerId: charge.customer,\n        orderId: charge.payment_intent,\n        paymentMethod: charge.payment_method_details.type,\n        paymentMethodId: charge.payment_method,\n        paymentIntentId: charge.payment_intent,\n        subscriptionId: charge.subscription,\n        metadata: \"\"\n      }\n    }]\n  };\n};","map":{"version":3,"sources":["/Users/acandael/Sites/webshop-anniek/crystallize-app/src/services/payment-providers/stripe/to-crystallize-order-model.js"],"names":["getClient","require","module","exports","stripeToCrystallizeOrderModel","basket","checkoutModel","paymentIntentId","paymentIntent","paymentIntents","retrieve","data","charges","charge","customerName","billing_details","name","split","cart","total","additionalInformation","JSON","stringify","stripe_merchant_data","merchant_data","order_metadata","metadata","customer","identifier","firstName","middleName","slice","length","join","lastName","birthDate","Date","addresses","type","street","address","line1","street2","line2","postalCode","postal_code","city","state","country","phone","email","receipt_email","undefined","payment","provider","stripe","id","customerId","orderId","payment_intent","paymentMethod","payment_method_details","paymentMethodId","payment_method","subscriptionId","subscription"],"mappings":"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","sourcesContent":["const { getClient } = require(\"./utils\");\n\nmodule.exports = async function stripeToCrystallizeOrderModel({\n  basket,\n  checkoutModel,\n  paymentIntentId,\n}) {\n  const paymentIntent = await getClient().paymentIntents.retrieve(\n    paymentIntentId\n  );\n\n  const { data } = paymentIntent.charges;\n  const charge = data[0];\n\n  const customerName = charge.billing_details.name.split(\" \");\n\n  return {\n    cart: basket.cart,\n    total: basket.total,\n    additionalInformation: JSON.stringify({\n      stripe_merchant_data: paymentIntent.merchant_data,\n      order_metadata: checkoutModel.metadata,\n    }),\n    customer: {\n      identifier: \"\",\n      firstName: customerName[0],\n      middleName: customerName.slice(1, customerName.length - 1).join(),\n      lastName: customerName[customerName.length - 1],\n      birthDate: Date,\n      addresses: [\n        {\n          type: \"billing\",\n          firstName: customerName[0],\n          middleName: customerName.slice(1, customerName.length - 1).join(),\n          lastName: customerName[customerName.length - 1],\n          street: charge.billing_details.address.line1,\n          street2: charge.billing_details.address.line2,\n          postalCode: charge.billing_details.address.postal_code,\n          city: charge.billing_details.address.city,\n          state: charge.billing_details.address.state,\n          country: charge.billing_details.address.country,\n          phone: charge.billing_details.phone,\n          email:\n            charge.receipt_email ||\n            checkoutModel.customer?.addresses?.[0]?.email ||\n            undefined,\n        },\n        {\n          type: \"delivery\",\n          firstName: customerName[0],\n          middleName: customerName.slice(1, customerName.length - 1).join(),\n          lastName: customerName[customerName.length - 1],\n          street: charge.billing_details.address.line1,\n          street2: charge.billing_details.address.line2,\n          postalCode: charge.billing_details.address.postal_code,\n          city: charge.billing_details.address.city,\n          state: charge.billing_details.address.state,\n          country: charge.billing_details.address.country,\n          phone: charge.billing_details.phone,\n          email:\n            charge.receipt_email ||\n            checkoutModel.customer?.addresses?.[0]?.email ||\n            undefined,\n        },\n      ],\n    },\n    payment: [\n      {\n        provider: \"stripe\",\n        stripe: {\n          stripe: charge.id,\n          customerId: charge.customer,\n          orderId: charge.payment_intent,\n          paymentMethod: charge.payment_method_details.type,\n          paymentMethodId: charge.payment_method,\n          paymentIntentId: charge.payment_intent,\n          subscriptionId: charge.subscription,\n          metadata: \"\",\n        },\n      },\n    ],\n  };\n};\n"]},"metadata":{},"sourceType":"script"}