{"ast":null,"code":"const {\n  callCatalogueApi\n} = require(\"../crystallize/utils\");\n/**\n * Example of how to use Crystallize to store and\n * manage vouchers.\n *\n * Expected catalogue structure:\n * _vouchers\n *  - voucher_1\n *  - voucher_2\n *  - ...\n *  - voucher_n\n *\n * Each voucher is based on the following shape\n * code (singleLine)\n * discount (choiceComponent)\n *  - percent (numeric)\n *  - amount (numeric)\n */\n\n\nmodule.exports = async function getCrystallizeVouchers() {\n  const vouchersFromCrystallize = await callCatalogueApi({\n    query: `\n      {\n        catalogue(language: \"en\", path: \"/vouchers\") {\n          children {\n            name\n            code: component(id: \"code\") {\n              content {\n                ... on SingleLineContent {\n                  text\n                }\n              }\n            }\n            discount: component(id: \"korting\") {\n              content {\n                ... on ComponentChoiceContent {\n                  selectedComponent {\n                    id\n                    content {\n                      ... on NumericContent {\n                        number\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    `\n  });\n\n  if (!vouchersFromCrystallize.data || !vouchersFromCrystallize.data.catalogue) {\n    return [];\n  }\n\n  return vouchersFromCrystallize.data.catalogue.children.map(voucherFromCrystallize => {\n    const discountComponent = voucherFromCrystallize.discount.content.selectedComponent;\n    let discountAmount = null;\n    let discountPercent = null;\n\n    if (discountComponent.id === \"percent\") {\n      discountPercent = discountComponent.content.number;\n    } else {\n      discountAmount = discountComponent.content.number;\n    }\n\n    return {\n      code: voucherFromCrystallize.code.content.text,\n      discountAmount,\n      discountPercent,\n      onlyForAuthorisedUser: false\n    };\n  });\n};","map":{"version":3,"sources":["/Users/acandael/Sites/crystallize-app/src/services/voucher-service/crystallize-vouchers-example.js"],"names":["callCatalogueApi","require","module","exports","getCrystallizeVouchers","vouchersFromCrystallize","query","data","catalogue","children","map","voucherFromCrystallize","discountComponent","discount","content","selectedComponent","discountAmount","discountPercent","id","number","code","text","onlyForAuthorisedUser"],"mappings":"AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAuBC,OAAO,CAAC,sBAAD,CAApC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,eAAeC,sBAAf,GAAwC;AACvD,QAAMC,uBAAuB,GAAG,MAAML,gBAAgB,CAAC;AACrDM,IAAAA,KAAK,EAAG;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9ByD,GAAD,CAAtD;;AAiCA,MACE,CAACD,uBAAuB,CAACE,IAAzB,IACA,CAACF,uBAAuB,CAACE,IAAxB,CAA6BC,SAFhC,EAGE;AACA,WAAO,EAAP;AACD;;AAED,SAAOH,uBAAuB,CAACE,IAAxB,CAA6BC,SAA7B,CAAuCC,QAAvC,CAAgDC,GAAhD,CACJC,sBAAD,IAA4B;AAC1B,UAAMC,iBAAiB,GACrBD,sBAAsB,CAACE,QAAvB,CAAgCC,OAAhC,CAAwCC,iBAD1C;AAGA,QAAIC,cAAc,GAAG,IAArB;AACA,QAAIC,eAAe,GAAG,IAAtB;;AACA,QAAIL,iBAAiB,CAACM,EAAlB,KAAyB,SAA7B,EAAwC;AACtCD,MAAAA,eAAe,GAAGL,iBAAiB,CAACE,OAAlB,CAA0BK,MAA5C;AACD,KAFD,MAEO;AACLH,MAAAA,cAAc,GAAGJ,iBAAiB,CAACE,OAAlB,CAA0BK,MAA3C;AACD;;AAED,WAAO;AACLC,MAAAA,IAAI,EAAET,sBAAsB,CAACS,IAAvB,CAA4BN,OAA5B,CAAoCO,IADrC;AAELL,MAAAA,cAFK;AAGLC,MAAAA,eAHK;AAILK,MAAAA,qBAAqB,EAAE;AAJlB,KAAP;AAMD,GAnBI,CAAP;AAqBD,CA9DD","sourcesContent":["const { callCatalogueApi } = require(\"../crystallize/utils\");\n\n/**\n * Example of how to use Crystallize to store and\n * manage vouchers.\n *\n * Expected catalogue structure:\n * _vouchers\n *  - voucher_1\n *  - voucher_2\n *  - ...\n *  - voucher_n\n *\n * Each voucher is based on the following shape\n * code (singleLine)\n * discount (choiceComponent)\n *  - percent (numeric)\n *  - amount (numeric)\n */\nmodule.exports = async function getCrystallizeVouchers() {\n  const vouchersFromCrystallize = await callCatalogueApi({\n    query: `\n      {\n        catalogue(language: \"en\", path: \"/vouchers\") {\n          children {\n            name\n            code: component(id: \"code\") {\n              content {\n                ... on SingleLineContent {\n                  text\n                }\n              }\n            }\n            discount: component(id: \"korting\") {\n              content {\n                ... on ComponentChoiceContent {\n                  selectedComponent {\n                    id\n                    content {\n                      ... on NumericContent {\n                        number\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    `,\n  });\n\n  if (\n    !vouchersFromCrystallize.data ||\n    !vouchersFromCrystallize.data.catalogue\n  ) {\n    return [];\n  }\n\n  return vouchersFromCrystallize.data.catalogue.children.map(\n    (voucherFromCrystallize) => {\n      const discountComponent =\n        voucherFromCrystallize.discount.content.selectedComponent;\n\n      let discountAmount = null;\n      let discountPercent = null;\n      if (discountComponent.id === \"percent\") {\n        discountPercent = discountComponent.content.number;\n      } else {\n        discountAmount = discountComponent.content.number;\n      }\n\n      return {\n        code: voucherFromCrystallize.code.content.text,\n        discountAmount,\n        discountPercent,\n        onlyForAuthorisedUser: false,\n      };\n    }\n  );\n};"]},"metadata":{},"sourceType":"script"}