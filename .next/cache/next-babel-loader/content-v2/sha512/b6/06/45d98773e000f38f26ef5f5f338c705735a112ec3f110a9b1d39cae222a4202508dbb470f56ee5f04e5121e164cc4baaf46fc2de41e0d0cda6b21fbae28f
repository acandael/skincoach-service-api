{"ast":null,"code":"module.exports = async function createPaymentIntent({\n  checkoutModel,\n  context\n}) {\n  const basketService = require(\"../../basket-service\");\n\n  const {\n    getClient\n  } = require(\"./utils\");\n\n  const {\n    basketModel,\n    metadata\n  } = checkoutModel;\n  const basket = await basketService.get({\n    basketModel,\n    context\n  });\n\n  if (metadata.shipping) {\n    basket.total.gross += 8;\n  }\n\n  const paymentIntent = await getClient().paymentIntents.create({\n    amount: basket.total.gross * 100,\n    currency: basket.total.currency\n  });\n  return paymentIntent;\n};","map":{"version":3,"sources":["/Users/acandael/Sites/crystallize-app/src/services/payment-providers/stripe/create-payment-intent.js"],"names":["module","exports","createPaymentIntent","checkoutModel","context","basketService","require","getClient","basketModel","metadata","basket","get","shipping","total","gross","paymentIntent","paymentIntents","create","amount","currency"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,eAAeC,mBAAf,CAAmC;AAClDC,EAAAA,aADkD;AAElDC,EAAAA;AAFkD,CAAnC,EAGd;AACD,QAAMC,aAAa,GAAGC,OAAO,CAAC,sBAAD,CAA7B;;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAgBD,OAAO,CAAC,SAAD,CAA7B;;AAEA,QAAM;AAAEE,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAA4BN,aAAlC;AAEA,QAAMO,MAAM,GAAG,MAAML,aAAa,CAACM,GAAd,CAAkB;AAAEH,IAAAA,WAAF;AAAeJ,IAAAA;AAAf,GAAlB,CAArB;;AAEA,MAAIK,QAAQ,CAACG,QAAb,EAAuB;AACrBF,IAAAA,MAAM,CAACG,KAAP,CAAaC,KAAb,IAAsB,CAAtB;AACD;;AAED,QAAMC,aAAa,GAAG,MAAMR,SAAS,GAAGS,cAAZ,CAA2BC,MAA3B,CAAkC;AAC5DC,IAAAA,MAAM,EAAER,MAAM,CAACG,KAAP,CAAaC,KAAb,GAAqB,GAD+B;AAE5DK,IAAAA,QAAQ,EAAET,MAAM,CAACG,KAAP,CAAaM;AAFqC,GAAlC,CAA5B;AAKA,SAAOJ,aAAP;AACD,CAtBD","sourcesContent":["module.exports = async function createPaymentIntent({\n  checkoutModel,\n  context,\n}) {\n  const basketService = require(\"../../basket-service\");\n\n  const { getClient } = require(\"./utils\");\n\n  const { basketModel, metadata } = checkoutModel;\n\n  const basket = await basketService.get({ basketModel, context });\n\n  if (metadata.shipping) {\n    basket.total.gross += 8;\n  }\n\n  const paymentIntent = await getClient().paymentIntents.create({\n    amount: basket.total.gross * 100,\n    currency: basket.total.currency,\n  });\n\n  return paymentIntent;\n};"]},"metadata":{},"sourceType":"script"}