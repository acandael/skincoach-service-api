{"ast":null,"code":"const {\n  getClient\n} = require(\"./utils\");\n\nmodule.exports = function crystallizeToKlarnaOrderModel(basket) {\n  const {\n    total,\n    cart\n  } = basket;\n  const order_amount = total.gross * 100;\n  return {\n    order_amount,\n    order_tax_amount: order_amount - total.net * 100,\n    order_lines: cart.map(({\n      quantity,\n      price,\n      name,\n      sku,\n      productId,\n      productVariantId,\n      imageUrl\n    }) => {\n      const {\n        gross,\n        net,\n        tax\n      } = price;\n      const unit_price = gross * 100;\n      const total_amount = unit_price * quantity;\n      const total_tax_amount = total_amount - net * quantity * 100;\n      return {\n        name,\n        reference: sku,\n        unit_price,\n        quantity,\n        total_amount,\n        total_tax_amount,\n        type: \"physical\",\n        tax_rate: tax.percent * 100,\n        image_url: imageUrl,\n        merchant_data: JSON.stringify({\n          productId,\n          productVariantId,\n          taxGroup: tax\n        })\n      };\n    })\n  };\n};","map":{"version":3,"sources":["/Users/acandael/Sites/crystallize-app/src/services/payment-providers/klarna/to-klarna-order-model.js"],"names":["getClient","require","module","exports","crystallizeToKlarnaOrderModel","basket","total","cart","order_amount","gross","order_tax_amount","net","order_lines","map","quantity","price","name","sku","productId","productVariantId","imageUrl","tax","unit_price","total_amount","total_tax_amount","reference","type","tax_rate","percent","image_url","merchant_data","JSON","stringify","taxGroup"],"mappings":"AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAgBC,OAAO,CAAC,SAAD,CAA7B;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,6BAAT,CAAuCC,MAAvC,EAA+C;AAC9D,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAkBF,MAAxB;AAEA,QAAMG,YAAY,GAAGF,KAAK,CAACG,KAAN,GAAc,GAAnC;AAEA,SAAO;AACLD,IAAAA,YADK;AAELE,IAAAA,gBAAgB,EAAEF,YAAY,GAAGF,KAAK,CAACK,GAAN,GAAY,GAFxC;AAGLC,IAAAA,WAAW,EAAEL,IAAI,CAACM,GAAL,CACX,CAAC;AACCC,MAAAA,QADD;AAECC,MAAAA,KAFD;AAGCC,MAAAA,IAHD;AAICC,MAAAA,GAJD;AAKCC,MAAAA,SALD;AAMCC,MAAAA,gBAND;AAOCC,MAAAA;AAPD,KAAD,KAQM;AACJ,YAAM;AAAEX,QAAAA,KAAF;AAASE,QAAAA,GAAT;AAAcU,QAAAA;AAAd,UAAsBN,KAA5B;AAEA,YAAMO,UAAU,GAAGb,KAAK,GAAG,GAA3B;AACA,YAAMc,YAAY,GAAGD,UAAU,GAAGR,QAAlC;AACA,YAAMU,gBAAgB,GAAGD,YAAY,GAAGZ,GAAG,GAAGG,QAAN,GAAiB,GAAzD;AAEA,aAAO;AACLE,QAAAA,IADK;AAELS,QAAAA,SAAS,EAAER,GAFN;AAGLK,QAAAA,UAHK;AAILR,QAAAA,QAJK;AAKLS,QAAAA,YALK;AAMLC,QAAAA,gBANK;AAOLE,QAAAA,IAAI,EAAE,UAPD;AAQLC,QAAAA,QAAQ,EAAEN,GAAG,CAACO,OAAJ,GAAc,GARnB;AASLC,QAAAA,SAAS,EAAET,QATN;AAULU,QAAAA,aAAa,EAAEC,IAAI,CAACC,SAAL,CAAe;AAC5Bd,UAAAA,SAD4B;AAE5BC,UAAAA,gBAF4B;AAG5Bc,UAAAA,QAAQ,EAAEZ;AAHkB,SAAf;AAVV,OAAP;AAgBD,KAhCU;AAHR,GAAP;AAsCD,CA3CD","sourcesContent":["const { getClient } = require(\"./utils\");\n\nmodule.exports = function crystallizeToKlarnaOrderModel(basket) {\n  const { total, cart } = basket;\n\n  const order_amount = total.gross * 100;\n\n  return {\n    order_amount,\n    order_tax_amount: order_amount - total.net * 100,\n    order_lines: cart.map(\n      ({\n        quantity,\n        price,\n        name,\n        sku,\n        productId,\n        productVariantId,\n        imageUrl,\n      }) => {\n        const { gross, net, tax } = price;\n\n        const unit_price = gross * 100;\n        const total_amount = unit_price * quantity;\n        const total_tax_amount = total_amount - net * quantity * 100;\n\n        return {\n          name,\n          reference: sku,\n          unit_price,\n          quantity,\n          total_amount,\n          total_tax_amount,\n          type: \"physical\",\n          tax_rate: tax.percent * 100,\n          image_url: imageUrl,\n          merchant_data: JSON.stringify({\n            productId,\n            productVariantId,\n            taxGroup: tax,\n          }),\n        };\n      }\n    ),\n  };\n};\n"]},"metadata":{},"sourceType":"script"}