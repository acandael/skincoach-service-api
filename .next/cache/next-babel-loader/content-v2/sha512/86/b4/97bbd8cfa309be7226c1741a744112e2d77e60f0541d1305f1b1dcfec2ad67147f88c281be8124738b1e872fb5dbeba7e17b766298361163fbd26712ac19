{"ast":null,"code":"const {\n  formatCurrency\n} = require(\"../../lib/currency\");\n\nconst {\n  orders\n} = require(\"../crystallize\");\n\nconst {\n  sendEmail\n} = require(\"./utils\");\n\nmodule.exports = async function sendOrderConfirmation(orderId) {\n  try {\n    var _order$customer$addre;\n\n    const order = await orders.getOrder(orderId);\n    const address = (_order$customer$addre = order.customer.addresses) === null || _order$customer$addre === void 0 ? void 0 : _order$customer$addre[1];\n    const {\n      email\n    } = order.customer.addresses[0];\n    const additionalInformation = JSON.parse(order.additionalInformation);\n    const {\n      deliveryMethod\n    } = additionalInformation.order_metadata;\n\n    if (!email) {\n      return {\n        success: false,\n        error: \"No email is conntected with the customer object\"\n      };\n    }\n\n    function setDeliveryMessage() {\n      if (deliveryMethod === 'shipping') {\n        return `<p>\n        Verzendkosten: <strong>${formatCurrency({\n          amount: 8,\n          currency: order.total.currency\n        })}</strong>\n      </p>\n      <p>Leveradres: ${address.street} ${address.streetNumber}, ${address.postalCode} ${address.city}</p>\n      `;\n      } else if (deliveryMethod === 'pickup') {\n        return `<p>Geen verzendkosten (ophalen in winkel)</p>`;\n      } else if (deliveryMethod === 'email') {\n        return `<p>Je kadobon wordt gemaild naar ${email} </p>`;\n      }\n    }\n\n    const mjml2html = require(\"mjml\");\n\n    const {\n      html\n    } = mjml2html(`\n      <mjml>\n        <mj-body>\n        <mj-section>\n          <mj-column>\n            <mj-text>\n              <h1>Bestelgegevens</h1>\n              <p>Bedankt voor je bestelling! Deze email bevat een kopie van je bestelling voor referentie.</p>\n              <p>\n                Bestelnummer: <strong>#${order.id}</strong>\n              </p>\n              <p>\n                Voornaam: <strong>${order.customer.firstName}</strong><br />\n                Naam: <strong>${order.customer.lastName}</strong><br />\n                Email: <strong>${email}</strong>\n              </p>\n              ${setDeliveryMessage()}\n              <p>\n                Totaal: <strong>${formatCurrency({\n      amount: order.total.gross,\n      currency: order.total.currency\n    })}</strong>\n              </p>\n            </mj-text>\n            <mj-table>\n              <tr style=\"border-bottom: 1px solid #ecedee; text-align: left;\">\n                <th style=\"padding: 0 15px 0 0;\">Naam</th>\n                <th style=\"padding: 0 15px;\">Hoeveelheid</th>\n                <th style=\"padding: 0 0 0 15px;\">Totaal</th>\n              </tr>\n              ${order.cart.map(item => `<tr>\n                  <td style=\"padding: 0 15px 0 0;\">${item.name} (${item.sku})</td>\n                  <td style=\"padding: 0 15px;\">${item.quantity}</td>\n                  <td style=\"padding: 0 0 0 15px;\">${formatCurrency({\n      amount: item.price.gross * item.quantity,\n      currency: item.price.currency\n    })}</td>\n                </tr>`)}\n            </mj-table>\n          </mj-column>\n        </mj-section>\n        </mj-body>\n      </mjml>\n    `);\n    await sendEmail({\n      to: email,\n      subject: \"Bestelgegevens\",\n      html\n    });\n    return {\n      success: true\n    };\n  } catch (error) {\n    console.log(error);\n    return {\n      success: false,\n      error\n    };\n  }\n};","map":{"version":3,"sources":["/Users/acandael/Sites/crystallize-app/src/services/email-service/order-confirmation.js"],"names":["formatCurrency","require","orders","sendEmail","module","exports","sendOrderConfirmation","orderId","order","getOrder","address","customer","addresses","email","additionalInformation","JSON","parse","deliveryMethod","order_metadata","success","error","setDeliveryMessage","amount","currency","total","street","streetNumber","postalCode","city","mjml2html","html","id","firstName","lastName","gross","cart","map","item","name","sku","quantity","price","to","subject","console","log"],"mappings":"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","sourcesContent":["const { formatCurrency } = require(\"../../lib/currency\");\nconst { orders } = require(\"../crystallize\");\nconst { sendEmail} = require(\"./utils\");\n\nmodule.exports = async function sendOrderConfirmation(orderId) {\n  try {\n    const order = await orders.getOrder(orderId);\n    const address = order.customer.addresses?.[1];\n\n    const { email } = order.customer.addresses[0];\n\n    const additionalInformation = JSON.parse(order.additionalInformation)\n    const {deliveryMethod} = additionalInformation.order_metadata\n\n    if (!email) {\n      return {\n        success: false,\n        error: \"No email is conntected with the customer object\",\n      };\n    }\n\n    function setDeliveryMessage() {\n      if (deliveryMethod === 'shipping') {\n        return `<p>\n        Verzendkosten: <strong>${formatCurrency({\n          amount: 8,\n          currency: order.total.currency,\n        })}</strong>\n      </p>\n      <p>Leveradres: ${address.street} ${address.streetNumber}, ${address.postalCode} ${address.city}</p>\n      `} else if (deliveryMethod === 'pickup') {\n        return `<p>Geen verzendkosten (ophalen in winkel)</p>`\n      } else if (deliveryMethod === 'email') {\n        return `<p>Je kadobon wordt gemaild naar ${email} </p>`\n      }\n    }\n\n    const mjml2html = require(\"mjml\");\n\n    const { html } = mjml2html(`\n      <mjml>\n        <mj-body>\n        <mj-section>\n          <mj-column>\n            <mj-text>\n              <h1>Bestelgegevens</h1>\n              <p>Bedankt voor je bestelling! Deze email bevat een kopie van je bestelling voor referentie.</p>\n              <p>\n                Bestelnummer: <strong>#${order.id}</strong>\n              </p>\n              <p>\n                Voornaam: <strong>${order.customer.firstName}</strong><br />\n                Naam: <strong>${order.customer.lastName}</strong><br />\n                Email: <strong>${email}</strong>\n              </p>\n              ${setDeliveryMessage()}\n              <p>\n                Totaal: <strong>${formatCurrency({\n                  amount: order.total.gross,\n                  currency: order.total.currency,\n                })}</strong>\n              </p>\n            </mj-text>\n            <mj-table>\n              <tr style=\"border-bottom: 1px solid #ecedee; text-align: left;\">\n                <th style=\"padding: 0 15px 0 0;\">Naam</th>\n                <th style=\"padding: 0 15px;\">Hoeveelheid</th>\n                <th style=\"padding: 0 0 0 15px;\">Totaal</th>\n              </tr>\n              ${order.cart.map(\n                (item) => `<tr>\n                  <td style=\"padding: 0 15px 0 0;\">${item.name} (${\n                  item.sku\n                })</td>\n                  <td style=\"padding: 0 15px;\">${item.quantity}</td>\n                  <td style=\"padding: 0 0 0 15px;\">${formatCurrency({\n                    amount: item.price.gross * item.quantity,\n                    currency: item.price.currency,\n                  })}</td>\n                </tr>`\n              )}\n            </mj-table>\n          </mj-column>\n        </mj-section>\n        </mj-body>\n      </mjml>\n    `);\n\n    await sendEmail({\n      to: email,\n      subject: \"Bestelgegevens\",\n      html,\n    });\n\n    return {\n      success: true,\n    };\n  } catch (error) {\n    console.log(error);\n    return {\n      success: false,\n      error,\n    };\n  }\n};\n"]},"metadata":{},"sourceType":"script"}