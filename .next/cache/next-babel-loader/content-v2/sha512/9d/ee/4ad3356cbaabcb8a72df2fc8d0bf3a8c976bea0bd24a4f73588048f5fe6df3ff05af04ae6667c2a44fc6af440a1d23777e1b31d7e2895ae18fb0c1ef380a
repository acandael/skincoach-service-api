{"ast":null,"code":"const {\n  formatCurrency\n} = require(\"../../lib/currency\");\n\nconst {\n  orders\n} = require(\"../crystallize\");\n\nconst {\n  sendEmail\n} = require(\"./utils\");\n\nmodule.exports = async function sendOrderConfirmation(orderId) {\n  try {\n    const order = await orders.getOrder(orderId);\n    const {\n      email\n    } = order.customer.addresses[0];\n    const additionalInformation = JSON.parse(order.additionalInformation);\n    const {\n      shipping\n    } = additionalInformation.order_metadata;\n\n    if (!email) {\n      return {\n        success: false,\n        error: \"No email is conntected with the customer object\"\n      };\n    }\n\n    const mjml2html = require(\"mjml\");\n\n    const {\n      html\n    } = mjml2html(`\n      <mjml>\n        <mj-body>\n        <mj-section>\n          <mj-column>\n            <mj-text>\n              <h1>Bestelgegevens</h1>\n              <p>Bedankt voor je bestelling! Deze email bevat een kopie van je bestelling voor referentie.</p>\n              <p>\n                Bestelnummer: <strong>#${order.id}</strong>\n              </p>\n              <p>\n                Voornaam: <strong>${order.customer.firstName}</strong><br />\n                Naam: <strong>${order.customer.lastName}</strong><br />\n                Email: <strong>${email}</strong>\n              </p>\n              ${shipping ? `<p>\n                Verzendkosten: <strong>${formatCurrency({\n      amount: 8,\n      currency: order.total.currency\n    })}</strong>\n              </p>` : `<p>Geen verzendkosten (ophalen in winkel)</p>`}\n              <p>\n                Totaal: <strong>${formatCurrency({\n      amount: shipping ? order.total.gross + 8 : order.total.gross,\n      currency: order.total.currency\n    })}</strong>\n              </p>\n            </mj-text>\n            <mj-table>\n              <tr style=\"border-bottom: 1px solid #ecedee; text-align: left;\">\n                <th style=\"padding: 0 15px 0 0;\">Naam</th>\n                <th style=\"padding: 0 15px;\">Hoeveelheid</th>\n                <th style=\"padding: 0 0 0 15px;\">Totaal</th>\n              </tr>\n              ${order.cart.map(item => `<tr>\n                  <td style=\"padding: 0 15px 0 0;\">${item.name} (${item.sku})</td>\n                  <td style=\"padding: 0 15px;\">${item.quantity}</td>\n                  <td style=\"padding: 0 0 0 15px;\">${formatCurrency({\n      amount: item.price.gross * item.quantity,\n      currency: item.price.currency\n    })}</td>\n                </tr>`)}\n            </mj-table>\n          </mj-column>\n        </mj-section>\n        </mj-body>\n      </mjml>\n    `);\n    await sendEmail({\n      to: email,\n      subject: \"Bestelgegevens\",\n      html\n    });\n    return {\n      success: true\n    };\n  } catch (error) {\n    console.log(error);\n    return {\n      success: false,\n      error\n    };\n  }\n};","map":{"version":3,"sources":["/Users/acandael/Sites/crystallize-app/src/services/email-service/order-confirmation.js"],"names":["formatCurrency","require","orders","sendEmail","module","exports","sendOrderConfirmation","orderId","order","getOrder","email","customer","addresses","additionalInformation","JSON","parse","shipping","order_metadata","success","error","mjml2html","html","id","firstName","lastName","amount","currency","total","gross","cart","map","item","name","sku","quantity","price","to","subject","console","log"],"mappings":"AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAqBC,OAAO,CAAC,oBAAD,CAAlC;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAaD,OAAO,CAAC,gBAAD,CAA1B;;AACA,MAAM;AAAEE,EAAAA;AAAF,IAAeF,OAAO,CAAC,SAAD,CAA5B;;AAEAG,MAAM,CAACC,OAAP,GAAiB,eAAeC,qBAAf,CAAqCC,OAArC,EAA8C;AAC7D,MAAI;AACF,UAAMC,KAAK,GAAG,MAAMN,MAAM,CAACO,QAAP,CAAgBF,OAAhB,CAApB;AAEA,UAAM;AAAEG,MAAAA;AAAF,QAAYF,KAAK,CAACG,QAAN,CAAeC,SAAf,CAAyB,CAAzB,CAAlB;AAEA,UAAMC,qBAAqB,GAAGC,IAAI,CAACC,KAAL,CAAWP,KAAK,CAACK,qBAAjB,CAA9B;AACA,UAAM;AAACG,MAAAA;AAAD,QAAaH,qBAAqB,CAACI,cAAzC;;AAEA,QAAI,CAACP,KAAL,EAAY;AACV,aAAO;AACLQ,QAAAA,OAAO,EAAE,KADJ;AAELC,QAAAA,KAAK,EAAE;AAFF,OAAP;AAID;;AAED,UAAMC,SAAS,GAAGnB,OAAO,CAAC,MAAD,CAAzB;;AAEA,UAAM;AAAEoB,MAAAA;AAAF,QAAWD,SAAS,CAAE;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyCZ,KAAK,CAACc,EAAG;AAClD;AACA;AACA,oCAAoCd,KAAK,CAACG,QAAN,CAAeY,SAAU;AAC7D,gCAAgCf,KAAK,CAACG,QAAN,CAAea,QAAS;AACxD,iCAAiCd,KAAM;AACvC;AACA,gBAAgBM,QAAQ,GAAI;AAC5B,yCAAyChB,cAAc,CAAC;AACtCyB,MAAAA,MAAM,EAAE,CAD8B;AAEtCC,MAAAA,QAAQ,EAAElB,KAAK,CAACmB,KAAN,CAAYD;AAFgB,KAAD,CAGpC;AACnB,mBALwB,GAKD,+CAA+C;AACtE;AACA,kCAAkC1B,cAAc,CAAC;AAC/ByB,MAAAA,MAAM,EAAET,QAAQ,GAAIR,KAAK,CAACmB,KAAN,CAAYC,KAAZ,GAAoB,CAAxB,GAA6BpB,KAAK,CAACmB,KAAN,CAAYC,KAD1B;AAE/BF,MAAAA,QAAQ,EAAElB,KAAK,CAACmB,KAAN,CAAYD;AAFS,KAAD,CAG7B;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgBlB,KAAK,CAACqB,IAAN,CAAWC,GAAX,CACCC,IAAD,IAAW;AAC3B,qDAAqDA,IAAI,CAACC,IAAK,KAC7CD,IAAI,CAACE,GACN;AACjB,iDAAiDF,IAAI,CAACG,QAAS;AAC/D,qDAAqDlC,cAAc,CAAC;AAChDyB,MAAAA,MAAM,EAAEM,IAAI,CAACI,KAAL,CAAWP,KAAX,GAAmBG,IAAI,CAACG,QADgB;AAEhDR,MAAAA,QAAQ,EAAEK,IAAI,CAACI,KAAL,CAAWT;AAF2B,KAAD,CAG9C;AACrB,sBAVgB,CAWA;AAChB;AACA;AACA;AACA;AACA;AACA,KApD8B,CAA1B;AAsDA,UAAMvB,SAAS,CAAC;AACdiC,MAAAA,EAAE,EAAE1B,KADU;AAEd2B,MAAAA,OAAO,EAAE,gBAFK;AAGdhB,MAAAA;AAHc,KAAD,CAAf;AAMA,WAAO;AACLH,MAAAA,OAAO,EAAE;AADJ,KAAP;AAGD,GAhFD,CAgFE,OAAOC,KAAP,EAAc;AACdmB,IAAAA,OAAO,CAACC,GAAR,CAAYpB,KAAZ;AACA,WAAO;AACLD,MAAAA,OAAO,EAAE,KADJ;AAELC,MAAAA;AAFK,KAAP;AAID;AACF,CAxFD","sourcesContent":["const { formatCurrency } = require(\"../../lib/currency\");\nconst { orders } = require(\"../crystallize\");\nconst { sendEmail} = require(\"./utils\");\n\nmodule.exports = async function sendOrderConfirmation(orderId) {\n  try {\n    const order = await orders.getOrder(orderId);\n\n    const { email } = order.customer.addresses[0];\n\n    const additionalInformation = JSON.parse(order.additionalInformation)\n    const {shipping} = additionalInformation.order_metadata\n\n    if (!email) {\n      return {\n        success: false,\n        error: \"No email is conntected with the customer object\",\n      };\n    }\n\n    const mjml2html = require(\"mjml\");\n\n    const { html } = mjml2html(`\n      <mjml>\n        <mj-body>\n        <mj-section>\n          <mj-column>\n            <mj-text>\n              <h1>Bestelgegevens</h1>\n              <p>Bedankt voor je bestelling! Deze email bevat een kopie van je bestelling voor referentie.</p>\n              <p>\n                Bestelnummer: <strong>#${order.id}</strong>\n              </p>\n              <p>\n                Voornaam: <strong>${order.customer.firstName}</strong><br />\n                Naam: <strong>${order.customer.lastName}</strong><br />\n                Email: <strong>${email}</strong>\n              </p>\n              ${shipping ? `<p>\n                Verzendkosten: <strong>${formatCurrency({\n                  amount: 8,\n                  currency: order.total.currency,\n                })}</strong>\n              </p>` : `<p>Geen verzendkosten (ophalen in winkel)</p>`}\n              <p>\n                Totaal: <strong>${formatCurrency({\n                  amount: shipping ? (order.total.gross + 8) : order.total.gross,\n                  currency: order.total.currency,\n                })}</strong>\n              </p>\n            </mj-text>\n            <mj-table>\n              <tr style=\"border-bottom: 1px solid #ecedee; text-align: left;\">\n                <th style=\"padding: 0 15px 0 0;\">Naam</th>\n                <th style=\"padding: 0 15px;\">Hoeveelheid</th>\n                <th style=\"padding: 0 0 0 15px;\">Totaal</th>\n              </tr>\n              ${order.cart.map(\n                (item) => `<tr>\n                  <td style=\"padding: 0 15px 0 0;\">${item.name} (${\n                  item.sku\n                })</td>\n                  <td style=\"padding: 0 15px;\">${item.quantity}</td>\n                  <td style=\"padding: 0 0 0 15px;\">${formatCurrency({\n                    amount: item.price.gross * item.quantity,\n                    currency: item.price.currency,\n                  })}</td>\n                </tr>`\n              )}\n            </mj-table>\n          </mj-column>\n        </mj-section>\n        </mj-body>\n      </mjml>\n    `);\n\n    await sendEmail({\n      to: email,\n      subject: \"Bestelgegevens\",\n      html,\n    });\n\n    return {\n      success: true,\n    };\n  } catch (error) {\n    console.log(error);\n    return {\n      success: false,\n      error,\n    };\n  }\n};\n"]},"metadata":{},"sourceType":"script"}