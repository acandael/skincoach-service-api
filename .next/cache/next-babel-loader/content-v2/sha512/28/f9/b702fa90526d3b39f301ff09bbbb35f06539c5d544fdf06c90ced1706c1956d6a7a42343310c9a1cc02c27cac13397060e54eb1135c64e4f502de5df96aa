{"ast":null,"code":"module.exports = async function confirmOrder({\n  paymentIntentId,\n  checkoutModel,\n  context\n}) {\n  const crystallize = require(\"../../crystallize\");\n\n  const emailService = require(\"../../email-service\");\n\n  const basketService = require(\"../../basket-service\");\n\n  const toCrystallizeOrderModel = require(\"./to-crystallize-order-model\");\n\n  const {\n    basketModel\n  } = checkoutModel;\n  const basket = await basketService.get({\n    basketModel,\n    context\n  }); // Prepares a model valid for Crystallize order intake\n\n  const crystallizeOrderModel = await toCrystallizeOrderModel({\n    basket,\n    checkoutModel,\n    paymentIntentId\n  });\n  /**\n   * Record the order in Crystallize\n   * Manage the order lifecycle by using the fulfilment pipelines:\n   * https://crystallize.com/learn/user-guides/orders-and-fulfilment\n   */\n\n  const order = await crystallize.orders.createOrder(crystallizeOrderModel); // Wait for the order to be persisted\n\n  await crystallize.orders.waitForOrderToBePersistated({\n    id: order.id\n  });\n  /**\n   * Send out the order confirmation email to the customer\n   * It can also be done in a webhook, example here:\n   * - webhooks/order/created\n   */\n\n  await emailService.sendOrderConfirmation(order.id);\n  return {\n    success: true,\n    orderId: order.id\n  };\n};","map":{"version":3,"sources":["/Users/acandael/Sites/crystallize-app/src/services/payment-providers/stripe/confirm-order.js"],"names":["module","exports","confirmOrder","paymentIntentId","checkoutModel","context","crystallize","require","emailService","basketService","toCrystallizeOrderModel","basketModel","basket","get","crystallizeOrderModel","order","orders","createOrder","waitForOrderToBePersistated","id","sendOrderConfirmation","success","orderId"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,eAAeC,YAAf,CAA4B;AAC3CC,EAAAA,eAD2C;AAE3CC,EAAAA,aAF2C;AAG3CC,EAAAA;AAH2C,CAA5B,EAId;AACD,QAAMC,WAAW,GAAGC,OAAO,CAAC,mBAAD,CAA3B;;AACA,QAAMC,YAAY,GAAGD,OAAO,CAAC,qBAAD,CAA5B;;AACA,QAAME,aAAa,GAAGF,OAAO,CAAC,sBAAD,CAA7B;;AAEA,QAAMG,uBAAuB,GAAGH,OAAO,CAAC,8BAAD,CAAvC;;AAEA,QAAM;AAAEI,IAAAA;AAAF,MAAkBP,aAAxB;AAEA,QAAMQ,MAAM,GAAG,MAAMH,aAAa,CAACI,GAAd,CAAkB;AAAEF,IAAAA,WAAF;AAAeN,IAAAA;AAAf,GAAlB,CAArB,CATC,CAWD;;AACA,QAAMS,qBAAqB,GAAG,MAAMJ,uBAAuB,CAAC;AAC1DE,IAAAA,MAD0D;AAE1DR,IAAAA,aAF0D;AAG1DD,IAAAA;AAH0D,GAAD,CAA3D;AAMA;AACF;AACA;AACA;AACA;;AACE,QAAMY,KAAK,GAAG,MAAMT,WAAW,CAACU,MAAZ,CAAmBC,WAAnB,CAA+BH,qBAA/B,CAApB,CAvBC,CAyBD;;AACA,QAAMR,WAAW,CAACU,MAAZ,CAAmBE,2BAAnB,CAA+C;AAAEC,IAAAA,EAAE,EAAEJ,KAAK,CAACI;AAAZ,GAA/C,CAAN;AAEA;AACF;AACA;AACA;AACA;;AACE,QAAMX,YAAY,CAACY,qBAAb,CAAmCL,KAAK,CAACI,EAAzC,CAAN;AAEA,SAAO;AACLE,IAAAA,OAAO,EAAE,IADJ;AAELC,IAAAA,OAAO,EAAEP,KAAK,CAACI;AAFV,GAAP;AAID,CA3CD","sourcesContent":["module.exports = async function confirmOrder({\n  paymentIntentId,\n  checkoutModel,\n  context,\n}) {\n  const crystallize = require(\"../../crystallize\");\n  const emailService = require(\"../../email-service\");\n  const basketService = require(\"../../basket-service\");\n\n  const toCrystallizeOrderModel = require(\"./to-crystallize-order-model\");\n\n  const { basketModel } = checkoutModel;\n\n  const basket = await basketService.get({ basketModel, context });\n\n  // Prepares a model valid for Crystallize order intake\n  const crystallizeOrderModel = await toCrystallizeOrderModel({\n    basket,\n    checkoutModel,\n    paymentIntentId,\n  });\n\n  /**\n   * Record the order in Crystallize\n   * Manage the order lifecycle by using the fulfilment pipelines:\n   * https://crystallize.com/learn/user-guides/orders-and-fulfilment\n   */\n  const order = await crystallize.orders.createOrder(crystallizeOrderModel);\n\n  // Wait for the order to be persisted\n  await crystallize.orders.waitForOrderToBePersistated({ id: order.id });\n\n  /**\n   * Send out the order confirmation email to the customer\n   * It can also be done in a webhook, example here:\n   * - webhooks/order/created\n   */\n  await emailService.sendOrderConfirmation(order.id);\n\n  return {\n    success: true,\n    orderId: order.id,\n  };\n};"]},"metadata":{},"sourceType":"script"}