{"ast":null,"code":"/**\n * The landing page for when users click the\n * magic link button in the email.\n */\nimport userService from \"../../../src/services/user-service\";\nexport default async function loginMagicLink(req, res) {\n  try {\n    /**\n     * Validatee the JWT token and extract the email\n     * address and the redirectURLAfterLogin URL to send the\n     * user to afterwards\n     */\n    const {\n      success,\n      signedLoginToken,\n      redirectURLAfterLogin\n    } = await userService.validateMagicLinkToken(req.query.token);\n\n    if (success) {\n      res.setHeader(\"Set-Cookie\", `${userService.USER_TOKEN_NAME}=${signedLoginToken}; HttpOnly; Max-Age=3600; Path=/`);\n      res.setHeader(\"Location\", redirectURLAfterLogin);\n      return res.status(302).send(\"User is authenticated\");\n    } else {\n      return res.status(400).send(\"User could not be authenticated\");\n    }\n  } catch (error) {\n    console.log(error);\n    res.status(500).send(\"Something went wrong when trying to authenticated the user\");\n  }\n}","map":{"version":3,"sources":["/Users/acandael/Sites/crystallize-app/pages/api/user/login-magic-link.js"],"names":["userService","loginMagicLink","req","res","success","signedLoginToken","redirectURLAfterLogin","validateMagicLinkToken","query","token","setHeader","USER_TOKEN_NAME","status","send","error","console","log"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,OAAOA,WAAP,MAAwB,oCAAxB;AAEA,eAAe,eAAeC,cAAf,CAA8BC,GAA9B,EAAmCC,GAAnC,EAAwC;AACrD,MAAI;AACF;AACJ;AACA;AACA;AACA;AACI,UAAM;AACJC,MAAAA,OADI;AAEJC,MAAAA,gBAFI;AAGJC,MAAAA;AAHI,QAIF,MAAMN,WAAW,CAACO,sBAAZ,CAAmCL,GAAG,CAACM,KAAJ,CAAUC,KAA7C,CAJV;;AAMA,QAAIL,OAAJ,EAAa;AACXD,MAAAA,GAAG,CAACO,SAAJ,CACE,YADF,EAEG,GAAEV,WAAW,CAACW,eAAgB,IAAGN,gBAAiB,kCAFrD;AAIAF,MAAAA,GAAG,CAACO,SAAJ,CAAc,UAAd,EAA0BJ,qBAA1B;AAEA,aAAOH,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,uBAArB,CAAP;AACD,KARD,MAQO;AACL,aAAOV,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,iCAArB,CAAP;AACD;AACF,GAvBD,CAuBE,OAAOC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEAX,IAAAA,GAAG,CACAS,MADH,CACU,GADV,EAEGC,IAFH,CAEQ,4DAFR;AAGD;AACF","sourcesContent":["/**\n * The landing page for when users click the\n * magic link button in the email.\n */\n\nimport userService from \"../../../src/services/user-service\";\n\nexport default async function loginMagicLink(req, res) {\n  try {\n    /**\n     * Validatee the JWT token and extract the email\n     * address and the redirectURLAfterLogin URL to send the\n     * user to afterwards\n     */\n    const {\n      success,\n      signedLoginToken,\n      redirectURLAfterLogin,\n    } = await userService.validateMagicLinkToken(req.query.token);\n\n    if (success) {\n      res.setHeader(\n        \"Set-Cookie\",\n        `${userService.USER_TOKEN_NAME}=${signedLoginToken}; HttpOnly; Max-Age=3600; Path=/`\n      );\n      res.setHeader(\"Location\", redirectURLAfterLogin);\n\n      return res.status(302).send(\"User is authenticated\");\n    } else {\n      return res.status(400).send(\"User could not be authenticated\");\n    }\n  } catch (error) {\n    console.log(error);\n\n    res\n      .status(500)\n      .send(\"Something went wrong when trying to authenticated the user\");\n  }\n}\n"]},"metadata":{},"sourceType":"module"}