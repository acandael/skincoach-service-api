{"ast":null,"code":"const {\n  formatCurrency\n} = require(\"../../lib/currency\");\n\nconst {\n  orders\n} = require(\"../crystallize\");\n\nconst {\n  sendEmail\n} = require(\"./utils\");\n\nmodule.exports = async function sendOrderConfirmation(orderId) {\n  try {\n    const order = await orders.getOrder(orderId);\n    const {\n      email\n    } = order.customer.addresses[0];\n\n    if (!email) {\n      return {\n        success: false,\n        error: \"No email is conntected with the customer object\"\n      };\n    }\n\n    const mjml2html = require(\"mjml\");\n\n    const {\n      html\n    } = mjml2html(`\n      <mjml>\n        <mj-body>\n        <mj-section>\n          <mj-column>\n            <mj-text>\n              <h1>Order Summary</h1>\n              <p>Bedankt voor je bestelling! Deze email bevat een kopie van je bestelling voor referentie.</p>\n              <p>\n                Bestelnummer: <strong>#${order.id}</strong>\n              </p>\n              <p>\n                Voornaam: <strong>${order.customer.firstName}</strong><br />\n                Naam: <strong>${order.customer.lastName}</strong><br />\n                Email: <strong>${email}</strong>\n              </p>\n              <p>\n                Total: <strong>${formatCurrency({\n      hoeveelheid: order.total.gross,\n      munteenheid: order.total.currency\n    })}</strong>\n              </p>\n            </mj-text>\n            <mj-table>\n              <tr style=\"border-bottom: 1px solid #ecedee; text-align: left;\">\n                <th style=\"padding: 0 15px 0 0;\">Naam</th>\n                <th style=\"padding: 0 15px;\">Hoeveelheid</th>\n                <th style=\"padding: 0 0 0 15px;\">Totaal</th>\n              </tr>\n              ${order.cart.map(item => `<tr>\n                  <td style=\"padding: 0 15px 0 0;\">${item.name} (${item.sku})</td>\n                  <td style=\"padding: 0 15px;\">${item.quantity}</td>\n                  <td style=\"padding: 0 0 0 15px;\">${formatCurrency({\n      hoeveelheid: item.price.gross * item.quantity,\n      munteenheid: item.price.currency\n    })}</td>\n                </tr>`)}\n            </mj-table>\n          </mj-column>\n        </mj-section>\n        </mj-body>\n      </mjml>\n    `);\n    await sendEmail({\n      to: email,\n      subject: \"Bestelgegevens\",\n      html\n    });\n    return {\n      success: true\n    };\n  } catch (error) {\n    console.log(error);\n    return {\n      success: false,\n      error\n    };\n  }\n};","map":{"version":3,"sources":["/Users/acandael/Sites/crystallize-app/src/services/email-service/order-confirmation.js"],"names":["formatCurrency","require","orders","sendEmail","module","exports","sendOrderConfirmation","orderId","order","getOrder","email","customer","addresses","success","error","mjml2html","html","id","firstName","lastName","hoeveelheid","total","gross","munteenheid","currency","cart","map","item","name","sku","quantity","price","to","subject","console","log"],"mappings":"AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAqBC,OAAO,CAAC,oBAAD,CAAlC;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAaD,OAAO,CAAC,gBAAD,CAA1B;;AACA,MAAM;AAAEE,EAAAA;AAAF,IAAeF,OAAO,CAAC,SAAD,CAA5B;;AAEAG,MAAM,CAACC,OAAP,GAAiB,eAAeC,qBAAf,CAAqCC,OAArC,EAA8C;AAC7D,MAAI;AACF,UAAMC,KAAK,GAAG,MAAMN,MAAM,CAACO,QAAP,CAAgBF,OAAhB,CAApB;AAEA,UAAM;AAAEG,MAAAA;AAAF,QAAYF,KAAK,CAACG,QAAN,CAAeC,SAAf,CAAyB,CAAzB,CAAlB;;AAEA,QAAI,CAACF,KAAL,EAAY;AACV,aAAO;AACLG,QAAAA,OAAO,EAAE,KADJ;AAELC,QAAAA,KAAK,EAAE;AAFF,OAAP;AAID;;AAED,UAAMC,SAAS,GAAGd,OAAO,CAAC,MAAD,CAAzB;;AAEA,UAAM;AAAEe,MAAAA;AAAF,QAAWD,SAAS,CAAE;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyCP,KAAK,CAACS,EAAG;AAClD;AACA;AACA,oCAAoCT,KAAK,CAACG,QAAN,CAAeO,SAAU;AAC7D,gCAAgCV,KAAK,CAACG,QAAN,CAAeQ,QAAS;AACxD,iCAAiCT,KAAM;AACvC;AACA;AACA,iCAAiCV,cAAc,CAAC;AAC9BoB,MAAAA,WAAW,EAAEZ,KAAK,CAACa,KAAN,CAAYC,KADK;AAE9BC,MAAAA,WAAW,EAAEf,KAAK,CAACa,KAAN,CAAYG;AAFK,KAAD,CAG5B;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgBhB,KAAK,CAACiB,IAAN,CAAWC,GAAX,CACCC,IAAD,IAAW;AAC3B,qDAAqDA,IAAI,CAACC,IAAK,KAC7CD,IAAI,CAACE,GACN;AACjB,iDAAiDF,IAAI,CAACG,QAAS;AAC/D,qDAAqD9B,cAAc,CAAC;AAChDoB,MAAAA,WAAW,EAAEO,IAAI,CAACI,KAAL,CAAWT,KAAX,GAAmBK,IAAI,CAACG,QADW;AAEhDP,MAAAA,WAAW,EAAEI,IAAI,CAACI,KAAL,CAAWP;AAFwB,KAAD,CAG9C;AACrB,sBAVgB,CAWA;AAChB;AACA;AACA;AACA;AACA;AACA,KA9C8B,CAA1B;AAgDA,UAAMrB,SAAS,CAAC;AACd6B,MAAAA,EAAE,EAAEtB,KADU;AAEduB,MAAAA,OAAO,EAAE,gBAFK;AAGdjB,MAAAA;AAHc,KAAD,CAAf;AAMA,WAAO;AACLH,MAAAA,OAAO,EAAE;AADJ,KAAP;AAGD,GAvED,CAuEE,OAAOC,KAAP,EAAc;AACdoB,IAAAA,OAAO,CAACC,GAAR,CAAYrB,KAAZ;AACA,WAAO;AACLD,MAAAA,OAAO,EAAE,KADJ;AAELC,MAAAA;AAFK,KAAP;AAID;AACF,CA/ED","sourcesContent":["const { formatCurrency } = require(\"../../lib/currency\");\nconst { orders } = require(\"../crystallize\");\nconst { sendEmail} = require(\"./utils\");\n\nmodule.exports = async function sendOrderConfirmation(orderId) {\n  try {\n    const order = await orders.getOrder(orderId);\n\n    const { email } = order.customer.addresses[0];\n\n    if (!email) {\n      return {\n        success: false,\n        error: \"No email is conntected with the customer object\",\n      };\n    }\n\n    const mjml2html = require(\"mjml\");\n\n    const { html } = mjml2html(`\n      <mjml>\n        <mj-body>\n        <mj-section>\n          <mj-column>\n            <mj-text>\n              <h1>Order Summary</h1>\n              <p>Bedankt voor je bestelling! Deze email bevat een kopie van je bestelling voor referentie.</p>\n              <p>\n                Bestelnummer: <strong>#${order.id}</strong>\n              </p>\n              <p>\n                Voornaam: <strong>${order.customer.firstName}</strong><br />\n                Naam: <strong>${order.customer.lastName}</strong><br />\n                Email: <strong>${email}</strong>\n              </p>\n              <p>\n                Total: <strong>${formatCurrency({\n                  hoeveelheid: order.total.gross,\n                  munteenheid: order.total.currency,\n                })}</strong>\n              </p>\n            </mj-text>\n            <mj-table>\n              <tr style=\"border-bottom: 1px solid #ecedee; text-align: left;\">\n                <th style=\"padding: 0 15px 0 0;\">Naam</th>\n                <th style=\"padding: 0 15px;\">Hoeveelheid</th>\n                <th style=\"padding: 0 0 0 15px;\">Totaal</th>\n              </tr>\n              ${order.cart.map(\n                (item) => `<tr>\n                  <td style=\"padding: 0 15px 0 0;\">${item.name} (${\n                  item.sku\n                })</td>\n                  <td style=\"padding: 0 15px;\">${item.quantity}</td>\n                  <td style=\"padding: 0 0 0 15px;\">${formatCurrency({\n                    hoeveelheid: item.price.gross * item.quantity,\n                    munteenheid: item.price.currency,\n                  })}</td>\n                </tr>`\n              )}\n            </mj-table>\n          </mj-column>\n        </mj-section>\n        </mj-body>\n      </mjml>\n    `);\n\n    await sendEmail({\n      to: email,\n      subject: \"Bestelgegevens\",\n      html,\n    });\n\n    return {\n      success: true,\n    };\n  } catch (error) {\n    console.log(error);\n    return {\n      success: false,\n      error,\n    };\n  }\n};\n"]},"metadata":{},"sourceType":"script"}